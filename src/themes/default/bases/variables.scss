@use 'sass:map';

@function relativePx($number) {
    @return calc($number/14)*1em
};

@function absolutePx($number) {
    @return calc($number/14)*1rem
};

$grays: (
    "gray-0": #ffffff,
    "gray-5": #f2f2f2,
    "gray-10": #e9e9e9,
    "gray-15": #dfdfdf,
    "gray-20": #cccccc,
    "gray-30": #b9b9b9,
    "gray-40": #a6a6a6,
    "gray-50": #939393,
    "gray-60": #808080,
    "gray-70": #6c6c6c,
    "gray-80": #595959,
    "gray-85": #464646,
    "gray-90": #3d3d3d,
    "gray-95": #333333,
    "gray-100": #000000,
);
$white: map.get($grays, 'gray-0');
$black: map.get($grays, 'gray-95');

//
//font family
//
$fontName: 'Pretendard Variable';
$fontSmoothing: antialiased;
$baseFontColor: $black;
$dModeBaseFontColor: $white;
//
//font weight
//
$light: 300;
$regular: 400;
$bold: 600;
$bolder: 900;

//
//line height
//
$lineHeight: calc(18 / 14);

//
//letter spacing
//
$widerSpacing: 1px;
$wideSpacing: 0.5px;
$baseSpacing: normal;
$narrowSpacing: -0.5px;
$narrowerSpacing: -1px;

//
//border color
//
$borderColor: #D6D6D6;
$borderDarkColor: darken($borderColor, 27.4);

//
//base background color
//
$background: #FFFFFF;
$dModeBackground: #333333;

//#definitions

//
// colors
//

// $primary: #3c79b8;
$primary: #6d9d72;
$secondary: #35363a;

$success: #528E64;
$info: #909090;
$danger: #D50000;
$attention: #EC6E00;
$importance: #FDC036;

$lightSuccess: #CBE1D2;
$lightInfo: #D4E9ED;
$lightDanger: #FBE0DA;
$lightAttention: #FFE9D6;
$lightImportance: #FFF3D7;

$primaryText: $white;
$secondaryText: $white;

$infoText: $white;
$dangerText: $white;
$attentionText: $white;
$importanceText: $white;

$surface: #f2f2f2;
$surfaceHover: #F4F4F4;

$gray: #909090;
$lightGray: lighten($gray, 16.1);
$darkGray: lighten($black, 20.4);

$darkPrimary: darken(saturate($primary, 23.9), 10.6);
$darkSecondary: darken($secondary, 35.7);
$darkerPrimary: darken(saturate($primary, 28.8), 20.8);
$darkerSecondary: darken($secondary, 58.1);

$lightPrimary: lighten($primary, 35);
$lightSecondary: lighten($secondary, 35);

$surface1: #F8F8F8;
$surface2: #EFF4FC;
$surface3: #DAE8F8;


$redColor: #D75757;
$orangeColor: #EE9033;
$yellowColor: #F8B825;
$lightgreenColor: #B3BC40;
$greenColor: #61A475;
$lightblueColor: #8CC5CE;
$blueColor: #70A3CA;
$deepblueColor: #5178AF;
$deeppurpleColor: #9180B4;
$purpleColor: #AF77C0;
$brownColor: #A86A82;
$grayColor: #8B8B8B;

$brandColors: (
        'primary': ($primary, $darkPrimary, $primaryText),
        'secondary': ($secondary, $darkSecondary, $secondaryText),
);

$stateColors: (
    'success': ($success, darken($greenColor, 10), $white, $lightSuccess),
    'info': ($info, darken($info, 10), $infoText, $lightInfo),
    'danger': ($danger, darken($danger, 10), $dangerText, $lightDanger),
    'attention': ($attention, darken($attention, 10), $attentionText, $lightAttention),
    'importance': ($importance, darken($importance, 10), $importanceText, $lightImportance),
);

@function grayHsl($per) {
    @return hsl(0, 0, $per) 
}

$colors: (
    'red': $redColor,
    'orange': $orangeColor,
    'yellow': $yellowColor,
    'lightgreen': $lightgreenColor,
    'green': $greenColor,
    'lightblue': $lightblueColor,
    'blue': $blueColor,
    'deepblue': $deepblueColor,
    'deeppurple': $deeppurpleColor,
    'purple': $purpleColor,
    'brown': $brownColor,
    'gray': $grayColor,
);

$colors2: (
        'red': #D93B3B,
        'sunset': #D44D32,
        'orange': #D95B2C,
        'amber': #D3873F,
        'yellow': #F5B54D,
        'citron': #CAC747,
        'lime': #85AB39,
        'green': #48992F,
        'mint': #3A874F,
        'teal': #449698,
        'cyan': #4D9BCC,
        'blue': #4E7AF8,
        'indigo': #5642ED,
        'purple': #8756F3,
        'pink': #BF3DA0,
        'rose': #BB3A62,
);

//
//heading
//
$headerFontWeight: $bold;
$h1: absolutePx(22);
$h2: absolutePx(20);
$h3: absolutePx(18);
$h4: absolutePx(16);
$h5: absolutePx(14);

//Size
$tinySize: calc(10 / 14);
$smallSize: calc(12 / 14);
$mediumSize: calc(14 / 14);
$largeSize: calc(18 / 14);
$hugeSize: calc(20 / 14);
$massiveSize: calc(24 / 14);

// Scroll Bars

$useCustomScrollbars: true;

$thumbWidth: 8;
$thumbBorderWidth: 2;

$customScrollbarWidth: $thumbWidth + ($thumbBorderWidth * 2);
$customScrollbarHeight: $customScrollbarWidth;


$trackBackground: rgba(0, 0, 0, 0);
$trackBorderRadius: 0px;

$thumbBorderRadius: $customScrollbarWidth * 0.5;

$thumbBackground: rgba(0, 0, 0, 0.55);
$thumbTransition: color 0.2s ease;

$thumbBorderColor: $background;

$thumbInactiveBackground: rgba(0, 0, 0, 0.15);
$thumbHoverBackground: rgba(128, 135, 139, 0.8);

/* Inverted */
$trackInvertedBackground: rgba(255, 255, 255, 0.1);
$thumbInvertedBackground: rgba(255, 255, 255, 0.25);
$thumbInvertedInactiveBackground: rgba(255, 255, 255, 0.15);
$thumbInvertedHoverBackground: rgba(255, 255, 255, 0.35);

$baseBorderRadius: relativePx(4);
//$baseBorderRadius: 2em;
$baseInputRadius: relativePx(4);

// button & input
$baseButtonColor: $black;
$baseButtonBg: #efefef;

$horizontalInputPadding: relativePx(14);
$verticalInputPadding: relativePx(11);
$horizontalPadding: $horizontalInputPadding + ($horizontalInputPadding * 0.5);
$verticalPadding: $verticalInputPadding;

$buttonPadding: $verticalPadding $horizontalPadding $verticalPadding;

// button-compact
$compactHorizontalPadding: $horizontalPadding * 0.5;
$compactVerticalPadding: $verticalInputPadding * 0.5;

$compactPadding: $compactVerticalPadding $compactHorizontalPadding;

//Button + Equal

$equalBtnWidth: 150px;
$equalBtnPadding: 11px 20px;

$equalLargeBtnWidth: 200px;
$equalLargeBtnPadding: 18px 30px;

//input base
$inputLineHeight: relativePx(17);
$lineHeightOffset:(( $inputLineHeight - 1em) * 0.5);
//$inputLineHeight: 17 / 14;
//$lineHeightOffset:(( $inputLineHeight - 1) * 0.5) * 14;

$inputVerticalOffsetPadding: $verticalInputPadding - $lineHeightOffset;

//$inputPadding: $inputVerticalOffsetPadding+px $horizontalInputPadding+px;
$inputPadding: $inputVerticalOffsetPadding $horizontalInputPadding;
// Grid system

$gridWhole: 12;
$gridGutter: 4;

$gridWholeMobile: 4;
$gridWholeTablet: 8;
$gridWholeLaptop: 12;

$gridPercent: calc(100 / $gridWhole);
$gridHalf: calc($gridWhole * 0.5);
$gridThird: calc($gridWhole / 3);
$gridQuarter: calc($gridWhole / 4);
$gridFifth: calc($gridWhole / 5);
$gridSixth: calc($gridWhole / 6);
$gridEighth: calc($gridWhole / 8);
$gridTenth: calc($gridWhole / 10);

$bp-mobile: 320px;
$bp-tablet: 768px;
$bp-laptop: 1280px;
$bp-desktop: 1440px;


//Dark Mode
//$dModeBaseFontColor: $white;
//$dModeBorderColor: #494F61;
//$dModeBackground: #31363e;
//
//$dModeSurface: #272C34;

//breakpoint
$breakpoints: (
    xs: 0, //mobile-portrait
    sm: 576px, //mobile-landscape
    md: 768px, //tablet
    lg: 992px, //desktop
    xl: 1200px, //desktop-large
) !default;